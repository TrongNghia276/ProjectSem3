@model Sem3Project.Areas.Admin.Models.Accounts
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";

}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-10">
                <h1> Edit Profile</h1>
            </div>

        </div>
</section>
    @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { enctype = "multipart/form-data", @class = "row" }))
    {
        <div class="col-2"></div>
        <div class="col-8">
            <div class="card card-primary">

                <div>
                    @Html.HiddenFor(model => model.AccountID)
                    @Html.HiddenFor(model => model.Role)
                    @Html.HiddenFor(model => model.AccountHistory)
                    @Html.HiddenFor(model => model.AccountName)
                    @Html.HiddenFor(model => model.AccountLock)
                    @Html.HiddenFor(model => model.Password)

                    @Html.HiddenFor(model => model.CheckPassword)

                    @Html.HiddenFor(model => model.Active)
                </div>
                <form>
                    <div class="card-body">

                        <div class="form-group">
                            <label for="exampleInputEmail1">FirstName</label>
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                        </div><div class="form-group">
                            <label for="exampleInputEmail1">LastName</label>
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Email address</label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { type = "email", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Day of Birth</label>
                            @Html.EditorFor(model => model.DoB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DoB, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Country</label>
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">City</label>
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

                        </div><div class="form-group">
                            <label for="exampleInputEmail1">State</label>
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })

                        </div>    <div class="form-group">
                            <label for="exampleInputEmail1">District</label>
                            @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Street</label>
                            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Phone</label>
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Zipcode</label>
                            @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })

                        </div>


                        <div class="form-group">
                            <label for="exampleInputFile">Image</label>
                            <div class="input-group">
                                <div class="custom-file">
                                    <div>
                                        @Html.EditorFor(model => model.Image)
                                        <input type="file" name="file" value="" />
                                    </div>
                                    @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { name = "file", type = "file", @class = "custom-file-input" } })*@

                                    @*<label class="custom-file-label" for="exampleInputFile">Choose Image</label>*@

                                </div>
                            </div>
                        </div>


                    </div>
                    <!-- /.card-body -->
                    <div>
                        <h3 style="color: red">@ViewBag.Msg</h3>
                    </div>
                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary" value="Accepted">Submit</button>
                    </div>
                </form>
            </div>
        </div>

        
    }


